apiVersion: v1
kind: ConfigMap
metadata:
  name: springappcon
  namespace: aravind
data:
  username: springapp
  password: mongodb@123

---

apiVersion: v1
kind: Secret
metadata:
  name: springappse
  namespace: aravind
type: Opaque
stringData:
  password: devdb@123

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath-aravind
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/mongodata-aravind"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath-aravind
  namespace: aravind
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeplo
  namespace: aravind
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
        - name: springappcontainer
          image: ganeshtudumu/manesha:2.0.0
          ports:
            - containerPort: 8080
          env:
            - name: MONGO_DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: springappcon
                  key: username
            - name: MONGO_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: springappse
                  key: password
            - name: MONGO_DB_HOSTNAME
              value: mongo
          livenessProbe:
            httpGet:
              path: /maven-web-application
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /maven-web-application
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: springapps
  namespace: aravind
spec:
  selector:
    app: springapp
  ports:
    - port: 80
      targetPort: 8080
  type: LoadBalancer

---

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: aravind
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      name: mongodbpod
      labels:
        app: mongodb
    spec:
      volumes:
        - name: mongodb-pvc
          persistentVolumeClaim:
            claimName: pvc-hostpath-aravind
      containers:
        - name: mongodbcontainer
          image: mongo
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: springappcon
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: springappse
                  key: password
          volumeMounts:
            - name: mongodb-pvc
              mountPath: /data/db
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: aravind
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017

